//
// Generated by LLVM NVPTX Back-End
//

.version 8.3
.target sm_90a
.address_size 64

	// .globl	add_kernel

.visible .entry add_kernel(
	.param .u64 add_kernel_param_0,
	.param .u64 add_kernel_param_1,
	.param .u64 add_kernel_param_2,
	.param .u32 add_kernel_param_3
)
.maxntid 128, 1, 1
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<10>;
	.reg .f32 	%f<4>;
	.reg .b64 	%rd<8>;
	.loc	1 8 0
$L__func_begin0:
	.loc	1 8 0

	ld.param.u64 	%rd4, [add_kernel_param_0];
	ld.param.u64 	%rd5, [add_kernel_param_1];
$L__tmp0:
	.loc	1 10 24
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 10 29
	shl.b32 	%r5, %r1, 7;
	ld.param.u64 	%rd6, [add_kernel_param_2];
	ld.param.u32 	%r6, [add_kernel_param_3];
	.loc	1 10 55
	mov.u32 	%r7, %tid.x;
	and.b32  	%r8, %r7, 127;
	.loc	1 10 42
	or.b32  	%r9, %r5, %r8;
	.loc	1 13 17
	setp.lt.s32 	%p1, %r9, %r6;
	.loc	1 14 24
	mul.wide.s32 	%rd7, %r9, 4;
	add.s64 	%rd1, %rd4, %rd7;
	.loc	1 14 16
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 15 24
	add.s64 	%rd2, %rd5, %rd7;
	.loc	1 15 16
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	.loc	1 18 12
	add.f32 	%f3, %f1, %f2;
	.loc	1 21 21
	add.s64 	%rd3, %rd6, %rd7;
	.loc	1 21 26
	mov.b32 	%r4, %f3;
	// begin inline asm
	@%p1 st.global.b32 [ %rd3 + 0 ], { %r4 };
	// end inline asm
	.loc	1 21 4
	ret;
$L__tmp1:
$L__func_end0:

}
	.file	1 "/opt/dlami/nvme/csullivan/triton/test_vadd.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 0
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 83
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 116
.b8 101
.b8 115
.b8 116
.b8 95
.b8 118
.b8 97
.b8 100
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 111
.b8 112
.b8 116
.b8 47
.b8 100
.b8 108
.b8 97
.b8 109
.b8 105
.b8 47
.b8 110
.b8 118
.b8 109
.b8 101
.b8 47
.b8 99
.b8 115
.b8 117
.b8 108
.b8 108
.b8 105
.b8 118
.b8 97
.b8 110
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
	}
	.section	.debug_loc	{	}

